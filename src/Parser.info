-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from src/Parser.y
-----------------------------------------------------------------------------

state 65 contains 1 shift/reduce conflicts.
state 127 contains 11 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Start                             (0)
	Start -> Func                                      (1)
	Start -> Start Func                                (2)
	Func -> Type id '(' FuncAssignBlock ')' '{' StmBlock ReturnStm '}'   (3)
	Func -> Type id '(' FuncAssignBlock ')' '{' ReturnStm '}'   (4)
	Func -> int main '(' ')' '{' StmBlock '}'          (5)
	FuncAssign -> Type id                              (6)
	FuncAssignBlock ->                                 (7)
	FuncAssignBlock -> FuncAssign                      (8)
	FuncAssignBlock -> FuncAssignBlock ',' FuncAssign   (9)
	Stm -> id '=' Exp ';'                              (10)
	Stm -> Type id ';'                                 (11)
	Stm -> Type id '=' Exp ';'                         (12)
	Stm -> if Exp Stm                                  (13)
	Stm -> if Exp Stm else Stm                         (14)
	Stm -> while Exp Stm                               (15)
	Stm -> for '(' Stm Exp ';' Exp ')' StmBlock        (16)
	Stm -> '{' StmBlock '}'                            (17)
	Stm -> id '(' ExpCallBlock ')' ';'                 (18)
	Stm -> print_int '(' Exp ')' ';'                   (19)
	Stm -> print_str '(' Exp ')' ';'                   (20)
	Stm -> ReturnStm                                   (21)
	ReturnStm -> return Exp ';'                        (22)
	StmBlock -> Stm                                    (23)
	StmBlock -> StmBlock Stm                           (24)
	Exp -> num                                         (25)
	Exp -> id                                          (26)
	Exp -> true                                        (27)
	Exp -> false                                       (28)
	Exp -> text                                        (29)
	Exp -> '(' Exp ')'                                 (30)
	Exp -> Exp '+' Exp                                 (31)
	Exp -> Exp '-' Exp                                 (32)
	Exp -> Exp '*' Exp                                 (33)
	Exp -> Exp '/' Exp                                 (34)
	Exp -> Exp '%' Exp                                 (35)
	Exp -> Exp '<=' Exp                                (36)
	Exp -> Exp '>=' Exp                                (37)
	Exp -> Exp '<' Exp                                 (38)
	Exp -> Exp '>' Exp                                 (39)
	Exp -> Exp '==' Exp                                (40)
	Exp -> Exp '!=' Exp                                (41)
	Exp -> Exp '&&' Exp                                (42)
	Exp -> Exp '||' Exp                                (43)
	Exp -> Exp '++'                                    (44)
	Exp -> Exp "--"                                    (45)
	Exp -> '!' Exp                                     (46)
	Exp -> id '(' ExpCallBlock ')'                     (47)
	Exp -> scan_int '(' ')'                            (48)
	ExpCall -> Exp                                     (49)
	ExpCallBlock ->                                    (50)
	ExpCallBlock -> ExpCall                            (51)
	ExpCallBlock -> ExpCallBlock ',' ExpCall           (52)
	Type -> int                                        (53)
	Type -> bool                                       (54)
	Type -> string                                     (55)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TOK_INT }
	num            { TOK_NUM $$ }
	id             { TOK_ID $$ }
	main           { TOK_MAIN_FUNC }
	for            { TOK_FOR }
	if             { TOK_IF }
	else           { TOK_ELSE }
	string         { TOK_STRING }
	text           { TOK_TEXT $$ }
	return         { TOK_RETURN }
	while          { TOK_WHILE }
	bool           { TOK_BOOLEAN }
	true           { TOK_BOOL $$ }
	false          { TOK_BOOL $$ }
	scan_int       { TOK_SCAN_INT }
	print_int      { TOK_PRINT_INT }
	print_str      { TOK_PRINT_STR }
	'+'            { TOK_PLUS }
	'-'            { TOK_MINUS }
	'*'            { TOK_MULT }
	'/'            { TOK_DIV }
	','            { TOK_COMMA }
	';'            { TOK_SEMICOLON }
	'('            { TOK_LPAREN }
	')'            { TOK_RPAREN }
	'{'            { TOK_LBRACE }
	'}'            { TOK_RBRACE }
	'%'            { TOK_MOD }
	'!='           { TOK_NOT_EQUAL }
	'=='           { TOK_EQUALS_EQUALS }
	'='            { TOK_EQUALS }
	'<='           { TOK_LESS_OR_EQUAL }
	'>='           { TOK_GREATER_OR_EQUAL }
	'<'            { TOK_LESS_THAN }
	'>'            { TOK_GREATER_THAN }
	'!'            { TOK_NOT }
	'&&'           { TOK_AND }
	'||'           { TOK_OR }
	'++'           { TOK_PLUS_PLUS }
	"--"           { TOK_MINUS_MINUS }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Start           rules 1, 2
	Func            rules 3, 4, 5
	FuncAssign      rule  6
	FuncAssignBlock rules 7, 8, 9
	Stm             rules 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
	ReturnStm       rule  22
	StmBlock        rules 23, 24
	Exp             rules 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
	ExpCall         rule  49
	ExpCallBlock    rules 50, 51, 52
	Type            rules 53, 54, 55

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	string         shift, and enter state 5
	bool           shift, and enter state 6

	Start          goto state 7
	Func           goto state 2
	Type           goto state 3

State 1


	int            shift, and enter state 4
	string         shift, and enter state 5
	bool           shift, and enter state 6

	Func           goto state 2
	Type           goto state 3

State 2

	Start -> Func .                                     (rule 1)

	int            reduce using rule 1
	string         reduce using rule 1
	bool           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Func -> Type . id '(' FuncAssignBlock ')' '{' StmBlock ReturnStm '}'    (rule 3)
	Func -> Type . id '(' FuncAssignBlock ')' '{' ReturnStm '}'    (rule 4)

	id             shift, and enter state 10


State 4

	Func -> int . main '(' ')' '{' StmBlock '}'         (rule 5)
	Type -> int .                                       (rule 53)

	id             reduce using rule 53
	main           shift, and enter state 9


State 5

	Type -> string .                                    (rule 55)

	id             reduce using rule 55


State 6

	Type -> bool .                                      (rule 54)

	id             reduce using rule 54


State 7

	%start_parser -> Start .                            (rule 0)
	Start -> Start . Func                               (rule 2)

	int            shift, and enter state 4
	string         shift, and enter state 5
	bool           shift, and enter state 6
	%eof           accept

	Func           goto state 8
	Type           goto state 3

State 8

	Start -> Start Func .                               (rule 2)

	int            reduce using rule 2
	string         reduce using rule 2
	bool           reduce using rule 2
	%eof           reduce using rule 2


State 9

	Func -> int main . '(' ')' '{' StmBlock '}'         (rule 5)

	'('            shift, and enter state 12


State 10

	Func -> Type id . '(' FuncAssignBlock ')' '{' StmBlock ReturnStm '}'    (rule 3)
	Func -> Type id . '(' FuncAssignBlock ')' '{' ReturnStm '}'    (rule 4)

	'('            shift, and enter state 11


State 11

	Func -> Type id '(' . FuncAssignBlock ')' '{' StmBlock ReturnStm '}'    (rule 3)
	Func -> Type id '(' . FuncAssignBlock ')' '{' ReturnStm '}'    (rule 4)

	int            shift, and enter state 17
	string         shift, and enter state 5
	bool           shift, and enter state 6
	','            reduce using rule 7
	')'            reduce using rule 7

	FuncAssign     goto state 14
	FuncAssignBlockgoto state 15
	Type           goto state 16

State 12

	Func -> int main '(' . ')' '{' StmBlock '}'         (rule 5)

	')'            shift, and enter state 13


State 13

	Func -> int main '(' ')' . '{' StmBlock '}'         (rule 5)

	'{'            shift, and enter state 21


State 14

	FuncAssignBlock -> FuncAssign .                     (rule 8)

	','            reduce using rule 8
	')'            reduce using rule 8


State 15

	Func -> Type id '(' FuncAssignBlock . ')' '{' StmBlock ReturnStm '}'    (rule 3)
	Func -> Type id '(' FuncAssignBlock . ')' '{' ReturnStm '}'    (rule 4)
	FuncAssignBlock -> FuncAssignBlock . ',' FuncAssign    (rule 9)

	','            shift, and enter state 19
	')'            shift, and enter state 20


State 16

	FuncAssign -> Type . id                             (rule 6)

	id             shift, and enter state 18


State 17

	Type -> int .                                       (rule 53)

	id             reduce using rule 53


State 18

	FuncAssign -> Type id .                             (rule 6)

	','            reduce using rule 6
	')'            reduce using rule 6


State 19

	FuncAssignBlock -> FuncAssignBlock ',' . FuncAssign    (rule 9)

	int            shift, and enter state 17
	string         shift, and enter state 5
	bool           shift, and enter state 6

	FuncAssign     goto state 35
	Type           goto state 16

State 20

	Func -> Type id '(' FuncAssignBlock ')' . '{' StmBlock ReturnStm '}'    (rule 3)
	Func -> Type id '(' FuncAssignBlock ')' . '{' ReturnStm '}'    (rule 4)

	'{'            shift, and enter state 34


State 21

	Func -> int main '(' ')' '{' . StmBlock '}'         (rule 5)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 22
	ReturnStm      goto state 23
	StmBlock       goto state 24
	Type           goto state 25

State 22

	StmBlock -> Stm .                                   (rule 23)

	int            reduce using rule 23
	num            reduce using rule 23
	id             reduce using rule 23
	for            reduce using rule 23
	if             reduce using rule 23
	else           reduce using rule 23
	string         reduce using rule 23
	text           reduce using rule 23
	return         reduce using rule 23
	while          reduce using rule 23
	bool           reduce using rule 23
	true           reduce using rule 23
	false          reduce using rule 23
	scan_int       reduce using rule 23
	print_int      reduce using rule 23
	print_str      reduce using rule 23
	'('            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'!'            reduce using rule 23


State 23

	Stm -> ReturnStm .                                  (rule 21)

	int            reduce using rule 21
	num            reduce using rule 21
	id             reduce using rule 21
	for            reduce using rule 21
	if             reduce using rule 21
	else           reduce using rule 21
	string         reduce using rule 21
	text           reduce using rule 21
	return         reduce using rule 21
	while          reduce using rule 21
	bool           reduce using rule 21
	true           reduce using rule 21
	false          reduce using rule 21
	scan_int       reduce using rule 21
	print_int      reduce using rule 21
	print_str      reduce using rule 21
	'('            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'!'            reduce using rule 21


State 24

	Func -> int main '(' ')' '{' StmBlock . '}'         (rule 5)
	StmBlock -> StmBlock . Stm                          (rule 24)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33
	'}'            shift, and enter state 57

	Stm            goto state 56
	ReturnStm      goto state 23
	Type           goto state 25

State 25

	Stm -> Type . id ';'                                (rule 11)
	Stm -> Type . id '=' Exp ';'                        (rule 12)

	id             shift, and enter state 55


State 26

	Stm -> id . '=' Exp ';'                             (rule 10)
	Stm -> id . '(' ExpCallBlock ')' ';'                (rule 18)

	'('            shift, and enter state 53
	'='            shift, and enter state 54


State 27

	Stm -> for . '(' Stm Exp ';' Exp ')' StmBlock       (rule 16)

	'('            shift, and enter state 52


State 28

	Stm -> if . Exp Stm                                 (rule 13)
	Stm -> if . Exp Stm else Stm                        (rule 14)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 51

State 29

	ReturnStm -> return . Exp ';'                       (rule 22)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 50

State 30

	Stm -> while . Exp Stm                              (rule 15)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 41

State 31

	Stm -> print_int . '(' Exp ')' ';'                  (rule 19)

	'('            shift, and enter state 40


State 32

	Stm -> print_str . '(' Exp ')' ';'                  (rule 20)

	'('            shift, and enter state 39


State 33

	Stm -> '{' . StmBlock '}'                           (rule 17)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 22
	ReturnStm      goto state 23
	StmBlock       goto state 38
	Type           goto state 25

State 34

	Func -> Type id '(' FuncAssignBlock ')' '{' . StmBlock ReturnStm '}'    (rule 3)
	Func -> Type id '(' FuncAssignBlock ')' '{' . ReturnStm '}'    (rule 4)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 22
	ReturnStm      goto state 36
	StmBlock       goto state 37
	Type           goto state 25

State 35

	FuncAssignBlock -> FuncAssignBlock ',' FuncAssign .    (rule 9)

	','            reduce using rule 9
	')'            reduce using rule 9


State 36

	Func -> Type id '(' FuncAssignBlock ')' '{' ReturnStm . '}'    (rule 4)
	Stm -> ReturnStm .                                  (rule 21)

	int            reduce using rule 21
	id             reduce using rule 21
	for            reduce using rule 21
	if             reduce using rule 21
	string         reduce using rule 21
	return         reduce using rule 21
	while          reduce using rule 21
	bool           reduce using rule 21
	print_int      reduce using rule 21
	print_str      reduce using rule 21
	'{'            reduce using rule 21
	'}'            shift, and enter state 91


State 37

	Func -> Type id '(' FuncAssignBlock ')' '{' StmBlock . ReturnStm '}'    (rule 3)
	StmBlock -> StmBlock . Stm                          (rule 24)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 56
	ReturnStm      goto state 90
	Type           goto state 25

State 38

	Stm -> '{' StmBlock . '}'                           (rule 17)
	StmBlock -> StmBlock . Stm                          (rule 24)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33
	'}'            shift, and enter state 89

	Stm            goto state 56
	ReturnStm      goto state 23
	Type           goto state 25

State 39

	Stm -> print_str '(' . Exp ')' ';'                  (rule 20)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 88

State 40

	Stm -> print_int '(' . Exp ')' ';'                  (rule 19)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 87

State 41

	Stm -> while Exp . Stm                              (rule 15)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'{'            shift, and enter state 33
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80

	Stm            goto state 86
	ReturnStm      goto state 23
	Type           goto state 25

State 42

	Exp -> num .                                        (rule 25)

	int            reduce using rule 25
	id             reduce using rule 25
	for            reduce using rule 25
	if             reduce using rule 25
	string         reduce using rule 25
	return         reduce using rule 25
	while          reduce using rule 25
	bool           reduce using rule 25
	print_int      reduce using rule 25
	print_str      reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	')'            reduce using rule 25
	'{'            reduce using rule 25
	'%'            reduce using rule 25
	'!='           reduce using rule 25
	'=='           reduce using rule 25
	'<='           reduce using rule 25
	'>='           reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'&&'           reduce using rule 25
	'||'           reduce using rule 25
	'++'           reduce using rule 25
	"--"           reduce using rule 25


State 43

	Exp -> id .                                         (rule 26)
	Exp -> id . '(' ExpCallBlock ')'                    (rule 47)

	int            reduce using rule 26
	id             reduce using rule 26
	for            reduce using rule 26
	if             reduce using rule 26
	string         reduce using rule 26
	return         reduce using rule 26
	while          reduce using rule 26
	bool           reduce using rule 26
	print_int      reduce using rule 26
	print_str      reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	'('            shift, and enter state 85
	')'            reduce using rule 26
	'{'            reduce using rule 26
	'%'            reduce using rule 26
	'!='           reduce using rule 26
	'=='           reduce using rule 26
	'<='           reduce using rule 26
	'>='           reduce using rule 26
	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'&&'           reduce using rule 26
	'||'           reduce using rule 26
	'++'           reduce using rule 26
	"--"           reduce using rule 26


State 44

	Exp -> text .                                       (rule 29)

	int            reduce using rule 29
	id             reduce using rule 29
	for            reduce using rule 29
	if             reduce using rule 29
	string         reduce using rule 29
	return         reduce using rule 29
	while          reduce using rule 29
	bool           reduce using rule 29
	print_int      reduce using rule 29
	print_str      reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	','            reduce using rule 29
	';'            reduce using rule 29
	')'            reduce using rule 29
	'{'            reduce using rule 29
	'%'            reduce using rule 29
	'!='           reduce using rule 29
	'=='           reduce using rule 29
	'<='           reduce using rule 29
	'>='           reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'&&'           reduce using rule 29
	'||'           reduce using rule 29
	'++'           reduce using rule 29
	"--"           reduce using rule 29


State 45

	Exp -> true .                                       (rule 27)

	int            reduce using rule 27
	id             reduce using rule 27
	for            reduce using rule 27
	if             reduce using rule 27
	string         reduce using rule 27
	return         reduce using rule 27
	while          reduce using rule 27
	bool           reduce using rule 27
	print_int      reduce using rule 27
	print_str      reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	')'            reduce using rule 27
	'{'            reduce using rule 27
	'%'            reduce using rule 27
	'!='           reduce using rule 27
	'=='           reduce using rule 27
	'<='           reduce using rule 27
	'>='           reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'&&'           reduce using rule 27
	'||'           reduce using rule 27
	'++'           reduce using rule 27
	"--"           reduce using rule 27


State 46

	Exp -> false .                                      (rule 28)

	int            reduce using rule 28
	id             reduce using rule 28
	for            reduce using rule 28
	if             reduce using rule 28
	string         reduce using rule 28
	return         reduce using rule 28
	while          reduce using rule 28
	bool           reduce using rule 28
	print_int      reduce using rule 28
	print_str      reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	','            reduce using rule 28
	';'            reduce using rule 28
	')'            reduce using rule 28
	'{'            reduce using rule 28
	'%'            reduce using rule 28
	'!='           reduce using rule 28
	'=='           reduce using rule 28
	'<='           reduce using rule 28
	'>='           reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'&&'           reduce using rule 28
	'||'           reduce using rule 28
	'++'           reduce using rule 28
	"--"           reduce using rule 28


State 47

	Exp -> scan_int . '(' ')'                           (rule 48)

	'('            shift, and enter state 84


State 48

	Exp -> '(' . Exp ')'                                (rule 30)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 83

State 49

	Exp -> '!' . Exp                                    (rule 46)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 82

State 50

	ReturnStm -> return Exp . ';'                       (rule 22)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	';'            shift, and enter state 81
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 51

	Stm -> if Exp . Stm                                 (rule 13)
	Stm -> if Exp . Stm else Stm                        (rule 14)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'{'            shift, and enter state 33
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80

	Stm            goto state 65
	ReturnStm      goto state 23
	Type           goto state 25

State 52

	Stm -> for '(' . Stm Exp ';' Exp ')' StmBlock       (rule 16)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 64
	ReturnStm      goto state 23
	Type           goto state 25

State 53

	Stm -> id '(' . ExpCallBlock ')' ';'                (rule 18)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	','            reduce using rule 50
	'('            shift, and enter state 48
	')'            reduce using rule 50
	'!'            shift, and enter state 49

	Exp            goto state 61
	ExpCall        goto state 62
	ExpCallBlock   goto state 63

State 54

	Stm -> id '=' . Exp ';'                             (rule 10)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 60

State 55

	Stm -> Type id . ';'                                (rule 11)
	Stm -> Type id . '=' Exp ';'                        (rule 12)

	';'            shift, and enter state 58
	'='            shift, and enter state 59


State 56

	StmBlock -> StmBlock Stm .                          (rule 24)

	int            reduce using rule 24
	num            reduce using rule 24
	id             reduce using rule 24
	for            reduce using rule 24
	if             reduce using rule 24
	else           reduce using rule 24
	string         reduce using rule 24
	text           reduce using rule 24
	return         reduce using rule 24
	while          reduce using rule 24
	bool           reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	scan_int       reduce using rule 24
	print_int      reduce using rule 24
	print_str      reduce using rule 24
	'('            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'!'            reduce using rule 24


State 57

	Func -> int main '(' ')' '{' StmBlock '}' .         (rule 5)

	int            reduce using rule 5
	string         reduce using rule 5
	bool           reduce using rule 5
	%eof           reduce using rule 5


State 58

	Stm -> Type id ';' .                                (rule 11)

	int            reduce using rule 11
	num            reduce using rule 11
	id             reduce using rule 11
	for            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	string         reduce using rule 11
	text           reduce using rule 11
	return         reduce using rule 11
	while          reduce using rule 11
	bool           reduce using rule 11
	true           reduce using rule 11
	false          reduce using rule 11
	scan_int       reduce using rule 11
	print_int      reduce using rule 11
	print_str      reduce using rule 11
	'('            reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'!'            reduce using rule 11


State 59

	Stm -> Type id '=' . Exp ';'                        (rule 12)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 116

State 60

	Stm -> id '=' Exp . ';'                             (rule 10)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	';'            shift, and enter state 115
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 61

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)
	ExpCall -> Exp .                                    (rule 49)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 49
	')'            reduce using rule 49
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 62

	ExpCallBlock -> ExpCall .                           (rule 51)

	','            reduce using rule 51
	')'            reduce using rule 51


State 63

	Stm -> id '(' ExpCallBlock . ')' ';'                (rule 18)
	ExpCallBlock -> ExpCallBlock . ',' ExpCall          (rule 52)

	','            shift, and enter state 113
	')'            shift, and enter state 114


State 64

	Stm -> for '(' Stm . Exp ';' Exp ')' StmBlock       (rule 16)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 112

State 65

	Stm -> if Exp Stm .                                 (rule 13)
	Stm -> if Exp Stm . else Stm                        (rule 14)

	int            reduce using rule 13
	num            reduce using rule 13
	id             reduce using rule 13
	for            reduce using rule 13
	if             reduce using rule 13
	else           shift, and enter state 111
			(reduce using rule 13)

	string         reduce using rule 13
	text           reduce using rule 13
	return         reduce using rule 13
	while          reduce using rule 13
	bool           reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	scan_int       reduce using rule 13
	print_int      reduce using rule 13
	print_str      reduce using rule 13
	'('            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'!'            reduce using rule 13


State 66

	Exp -> Exp '+' . Exp                                (rule 31)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 110

State 67

	Exp -> Exp '-' . Exp                                (rule 32)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 109

State 68

	Exp -> Exp '*' . Exp                                (rule 33)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 108

State 69

	Exp -> Exp '/' . Exp                                (rule 34)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 107

State 70

	Exp -> Exp '%' . Exp                                (rule 35)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 106

State 71

	Exp -> Exp '!=' . Exp                               (rule 41)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 105

State 72

	Exp -> Exp '==' . Exp                               (rule 40)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 104

State 73

	Exp -> Exp '<=' . Exp                               (rule 36)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 103

State 74

	Exp -> Exp '>=' . Exp                               (rule 37)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 102

State 75

	Exp -> Exp '<' . Exp                                (rule 38)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 101

State 76

	Exp -> Exp '>' . Exp                                (rule 39)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 100

State 77

	Exp -> Exp '&&' . Exp                               (rule 42)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 99

State 78

	Exp -> Exp '||' . Exp                               (rule 43)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 98

State 79

	Exp -> Exp '++' .                                   (rule 44)

	int            reduce using rule 44
	id             reduce using rule 44
	for            reduce using rule 44
	if             reduce using rule 44
	string         reduce using rule 44
	return         reduce using rule 44
	while          reduce using rule 44
	bool           reduce using rule 44
	print_int      reduce using rule 44
	print_str      reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	')'            reduce using rule 44
	'{'            reduce using rule 44
	'%'            reduce using rule 44
	'!='           reduce using rule 44
	'=='           reduce using rule 44
	'<='           reduce using rule 44
	'>='           reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	'++'           reduce using rule 44
	"--"           reduce using rule 44


State 80

	Exp -> Exp "--" .                                   (rule 45)

	int            reduce using rule 45
	id             reduce using rule 45
	for            reduce using rule 45
	if             reduce using rule 45
	string         reduce using rule 45
	return         reduce using rule 45
	while          reduce using rule 45
	bool           reduce using rule 45
	print_int      reduce using rule 45
	print_str      reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	')'            reduce using rule 45
	'{'            reduce using rule 45
	'%'            reduce using rule 45
	'!='           reduce using rule 45
	'=='           reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'&&'           reduce using rule 45
	'||'           reduce using rule 45
	'++'           reduce using rule 45
	"--"           reduce using rule 45


State 81

	ReturnStm -> return Exp ';' .                       (rule 22)

	int            reduce using rule 22
	num            reduce using rule 22
	id             reduce using rule 22
	for            reduce using rule 22
	if             reduce using rule 22
	else           reduce using rule 22
	string         reduce using rule 22
	text           reduce using rule 22
	return         reduce using rule 22
	while          reduce using rule 22
	bool           reduce using rule 22
	true           reduce using rule 22
	false          reduce using rule 22
	scan_int       reduce using rule 22
	print_int      reduce using rule 22
	print_str      reduce using rule 22
	'('            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'!'            reduce using rule 22


State 82

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)
	Exp -> '!' Exp .                                    (rule 46)

	int            reduce using rule 46
	id             reduce using rule 46
	for            reduce using rule 46
	if             reduce using rule 46
	string         reduce using rule 46
	return         reduce using rule 46
	while          reduce using rule 46
	bool           reduce using rule 46
	print_int      reduce using rule 46
	print_str      reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	')'            reduce using rule 46
	'{'            reduce using rule 46
	'%'            reduce using rule 46
	'!='           reduce using rule 46
	'=='           reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'&&'           reduce using rule 46
	'||'           reduce using rule 46
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 83

	Exp -> '(' Exp . ')'                                (rule 30)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 97
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 84

	Exp -> scan_int '(' . ')'                           (rule 48)

	')'            shift, and enter state 96


State 85

	Exp -> id '(' . ExpCallBlock ')'                    (rule 47)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	','            reduce using rule 50
	'('            shift, and enter state 48
	')'            reduce using rule 50
	'!'            shift, and enter state 49

	Exp            goto state 61
	ExpCall        goto state 62
	ExpCallBlock   goto state 95

State 86

	Stm -> while Exp Stm .                              (rule 15)

	int            reduce using rule 15
	num            reduce using rule 15
	id             reduce using rule 15
	for            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	string         reduce using rule 15
	text           reduce using rule 15
	return         reduce using rule 15
	while          reduce using rule 15
	bool           reduce using rule 15
	true           reduce using rule 15
	false          reduce using rule 15
	scan_int       reduce using rule 15
	print_int      reduce using rule 15
	print_str      reduce using rule 15
	'('            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'!'            reduce using rule 15


State 87

	Stm -> print_int '(' Exp . ')' ';'                  (rule 19)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 94
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 88

	Stm -> print_str '(' Exp . ')' ';'                  (rule 20)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 93
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 89

	Stm -> '{' StmBlock '}' .                           (rule 17)

	int            reduce using rule 17
	num            reduce using rule 17
	id             reduce using rule 17
	for            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	string         reduce using rule 17
	text           reduce using rule 17
	return         reduce using rule 17
	while          reduce using rule 17
	bool           reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	scan_int       reduce using rule 17
	print_int      reduce using rule 17
	print_str      reduce using rule 17
	'('            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'!'            reduce using rule 17


State 90

	Func -> Type id '(' FuncAssignBlock ')' '{' StmBlock ReturnStm . '}'    (rule 3)
	Stm -> ReturnStm .                                  (rule 21)

	int            reduce using rule 21
	id             reduce using rule 21
	for            reduce using rule 21
	if             reduce using rule 21
	string         reduce using rule 21
	return         reduce using rule 21
	while          reduce using rule 21
	bool           reduce using rule 21
	print_int      reduce using rule 21
	print_str      reduce using rule 21
	'{'            reduce using rule 21
	'}'            shift, and enter state 92


State 91

	Func -> Type id '(' FuncAssignBlock ')' '{' ReturnStm '}' .    (rule 4)

	int            reduce using rule 4
	string         reduce using rule 4
	bool           reduce using rule 4
	%eof           reduce using rule 4


State 92

	Func -> Type id '(' FuncAssignBlock ')' '{' StmBlock ReturnStm '}' .    (rule 3)

	int            reduce using rule 3
	string         reduce using rule 3
	bool           reduce using rule 3
	%eof           reduce using rule 3


State 93

	Stm -> print_str '(' Exp ')' . ';'                  (rule 20)

	';'            shift, and enter state 124


State 94

	Stm -> print_int '(' Exp ')' . ';'                  (rule 19)

	';'            shift, and enter state 123


State 95

	Exp -> id '(' ExpCallBlock . ')'                    (rule 47)
	ExpCallBlock -> ExpCallBlock . ',' ExpCall          (rule 52)

	','            shift, and enter state 113
	')'            shift, and enter state 122


State 96

	Exp -> scan_int '(' ')' .                           (rule 48)

	int            reduce using rule 48
	id             reduce using rule 48
	for            reduce using rule 48
	if             reduce using rule 48
	string         reduce using rule 48
	return         reduce using rule 48
	while          reduce using rule 48
	bool           reduce using rule 48
	print_int      reduce using rule 48
	print_str      reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	')'            reduce using rule 48
	'{'            reduce using rule 48
	'%'            reduce using rule 48
	'!='           reduce using rule 48
	'=='           reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'&&'           reduce using rule 48
	'||'           reduce using rule 48
	'++'           reduce using rule 48
	"--"           reduce using rule 48


State 97

	Exp -> '(' Exp ')' .                                (rule 30)

	int            reduce using rule 30
	id             reduce using rule 30
	for            reduce using rule 30
	if             reduce using rule 30
	string         reduce using rule 30
	return         reduce using rule 30
	while          reduce using rule 30
	bool           reduce using rule 30
	print_int      reduce using rule 30
	print_str      reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	')'            reduce using rule 30
	'{'            reduce using rule 30
	'%'            reduce using rule 30
	'!='           reduce using rule 30
	'=='           reduce using rule 30
	'<='           reduce using rule 30
	'>='           reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'&&'           reduce using rule 30
	'||'           reduce using rule 30
	'++'           reduce using rule 30
	"--"           reduce using rule 30


State 98

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp '||' Exp .                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 43
	id             reduce using rule 43
	for            reduce using rule 43
	if             reduce using rule 43
	string         reduce using rule 43
	return         reduce using rule 43
	while          reduce using rule 43
	bool           reduce using rule 43
	print_int      reduce using rule 43
	print_str      reduce using rule 43
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 43
	';'            reduce using rule 43
	')'            reduce using rule 43
	'{'            reduce using rule 43
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 99

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp '&&' Exp .                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 42
	id             reduce using rule 42
	for            reduce using rule 42
	if             reduce using rule 42
	string         reduce using rule 42
	return         reduce using rule 42
	while          reduce using rule 42
	bool           reduce using rule 42
	print_int      reduce using rule 42
	print_str      reduce using rule 42
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 42
	';'            reduce using rule 42
	')'            reduce using rule 42
	'{'            reduce using rule 42
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 100

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp '>' Exp .                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 39
	id             reduce using rule 39
	for            reduce using rule 39
	if             reduce using rule 39
	string         reduce using rule 39
	return         reduce using rule 39
	while          reduce using rule 39
	bool           reduce using rule 39
	print_int      reduce using rule 39
	print_str      reduce using rule 39
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 39
	';'            reduce using rule 39
	')'            reduce using rule 39
	'{'            reduce using rule 39
	'%'            shift, and enter state 70
	'!='           fail
	'=='           fail
	'<='           fail
	'>='           fail
	'<'            fail
	'>'            fail
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 101

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp '<' Exp .                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 38
	id             reduce using rule 38
	for            reduce using rule 38
	if             reduce using rule 38
	string         reduce using rule 38
	return         reduce using rule 38
	while          reduce using rule 38
	bool           reduce using rule 38
	print_int      reduce using rule 38
	print_str      reduce using rule 38
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 38
	';'            reduce using rule 38
	')'            reduce using rule 38
	'{'            reduce using rule 38
	'%'            shift, and enter state 70
	'!='           fail
	'=='           fail
	'<='           fail
	'>='           fail
	'<'            fail
	'>'            fail
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 102

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp '>=' Exp .                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 37
	id             reduce using rule 37
	for            reduce using rule 37
	if             reduce using rule 37
	string         reduce using rule 37
	return         reduce using rule 37
	while          reduce using rule 37
	bool           reduce using rule 37
	print_int      reduce using rule 37
	print_str      reduce using rule 37
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 37
	';'            reduce using rule 37
	')'            reduce using rule 37
	'{'            reduce using rule 37
	'%'            shift, and enter state 70
	'!='           fail
	'=='           fail
	'<='           fail
	'>='           fail
	'<'            fail
	'>'            fail
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 103

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp '<=' Exp .                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 36
	id             reduce using rule 36
	for            reduce using rule 36
	if             reduce using rule 36
	string         reduce using rule 36
	return         reduce using rule 36
	while          reduce using rule 36
	bool           reduce using rule 36
	print_int      reduce using rule 36
	print_str      reduce using rule 36
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 36
	';'            reduce using rule 36
	')'            reduce using rule 36
	'{'            reduce using rule 36
	'%'            shift, and enter state 70
	'!='           fail
	'=='           fail
	'<='           fail
	'>='           fail
	'<'            fail
	'>'            fail
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 104

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp '==' Exp .                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 40
	id             reduce using rule 40
	for            reduce using rule 40
	if             reduce using rule 40
	string         reduce using rule 40
	return         reduce using rule 40
	while          reduce using rule 40
	bool           reduce using rule 40
	print_int      reduce using rule 40
	print_str      reduce using rule 40
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 40
	';'            reduce using rule 40
	')'            reduce using rule 40
	'{'            reduce using rule 40
	'%'            shift, and enter state 70
	'!='           fail
	'=='           fail
	'<='           fail
	'>='           fail
	'<'            fail
	'>'            fail
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 105

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp '!=' Exp .                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 41
	id             reduce using rule 41
	for            reduce using rule 41
	if             reduce using rule 41
	string         reduce using rule 41
	return         reduce using rule 41
	while          reduce using rule 41
	bool           reduce using rule 41
	print_int      reduce using rule 41
	print_str      reduce using rule 41
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 41
	';'            reduce using rule 41
	')'            reduce using rule 41
	'{'            reduce using rule 41
	'%'            shift, and enter state 70
	'!='           fail
	'=='           fail
	'<='           fail
	'>='           fail
	'<'            fail
	'>'            fail
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 106

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp '%' Exp .                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 35
	id             reduce using rule 35
	for            reduce using rule 35
	if             reduce using rule 35
	string         reduce using rule 35
	return         reduce using rule 35
	while          reduce using rule 35
	bool           reduce using rule 35
	print_int      reduce using rule 35
	print_str      reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	')'            reduce using rule 35
	'{'            reduce using rule 35
	'%'            reduce using rule 35
	'!='           reduce using rule 35
	'=='           reduce using rule 35
	'<='           reduce using rule 35
	'>='           reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 107

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp '/' Exp .                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 34
	id             reduce using rule 34
	for            reduce using rule 34
	if             reduce using rule 34
	string         reduce using rule 34
	return         reduce using rule 34
	while          reduce using rule 34
	bool           reduce using rule 34
	print_int      reduce using rule 34
	print_str      reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	')'            reduce using rule 34
	'{'            reduce using rule 34
	'%'            reduce using rule 34
	'!='           reduce using rule 34
	'=='           reduce using rule 34
	'<='           reduce using rule 34
	'>='           reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'&&'           reduce using rule 34
	'||'           reduce using rule 34
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 108

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp '*' Exp .                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 33
	id             reduce using rule 33
	for            reduce using rule 33
	if             reduce using rule 33
	string         reduce using rule 33
	return         reduce using rule 33
	while          reduce using rule 33
	bool           reduce using rule 33
	print_int      reduce using rule 33
	print_str      reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	')'            reduce using rule 33
	'{'            reduce using rule 33
	'%'            reduce using rule 33
	'!='           reduce using rule 33
	'=='           reduce using rule 33
	'<='           reduce using rule 33
	'>='           reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'&&'           reduce using rule 33
	'||'           reduce using rule 33
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 109

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp '-' Exp .                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 32
	id             reduce using rule 32
	for            reduce using rule 32
	if             reduce using rule 32
	string         reduce using rule 32
	return         reduce using rule 32
	while          reduce using rule 32
	bool           reduce using rule 32
	print_int      reduce using rule 32
	print_str      reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 32
	';'            reduce using rule 32
	')'            reduce using rule 32
	'{'            reduce using rule 32
	'%'            shift, and enter state 70
	'!='           reduce using rule 32
	'=='           reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 110

	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp '+' Exp .                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	int            reduce using rule 31
	id             reduce using rule 31
	for            reduce using rule 31
	if             reduce using rule 31
	string         reduce using rule 31
	return         reduce using rule 31
	while          reduce using rule 31
	bool           reduce using rule 31
	print_int      reduce using rule 31
	print_str      reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	','            reduce using rule 31
	';'            reduce using rule 31
	')'            reduce using rule 31
	'{'            reduce using rule 31
	'%'            shift, and enter state 70
	'!='           reduce using rule 31
	'=='           reduce using rule 31
	'<='           reduce using rule 31
	'>='           reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'&&'           reduce using rule 31
	'||'           reduce using rule 31
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 111

	Stm -> if Exp Stm else . Stm                        (rule 14)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 121
	ReturnStm      goto state 23
	Type           goto state 25

State 112

	Stm -> for '(' Stm Exp . ';' Exp ')' StmBlock       (rule 16)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	';'            shift, and enter state 120
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 113

	ExpCallBlock -> ExpCallBlock ',' . ExpCall          (rule 52)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 61
	ExpCall        goto state 119

State 114

	Stm -> id '(' ExpCallBlock ')' . ';'                (rule 18)

	';'            shift, and enter state 118


State 115

	Stm -> id '=' Exp ';' .                             (rule 10)

	int            reduce using rule 10
	num            reduce using rule 10
	id             reduce using rule 10
	for            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	string         reduce using rule 10
	text           reduce using rule 10
	return         reduce using rule 10
	while          reduce using rule 10
	bool           reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	scan_int       reduce using rule 10
	print_int      reduce using rule 10
	print_str      reduce using rule 10
	'('            reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	'!'            reduce using rule 10


State 116

	Stm -> Type id '=' Exp . ';'                        (rule 12)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	';'            shift, and enter state 117
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 117

	Stm -> Type id '=' Exp ';' .                        (rule 12)

	int            reduce using rule 12
	num            reduce using rule 12
	id             reduce using rule 12
	for            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	string         reduce using rule 12
	text           reduce using rule 12
	return         reduce using rule 12
	while          reduce using rule 12
	bool           reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	scan_int       reduce using rule 12
	print_int      reduce using rule 12
	print_str      reduce using rule 12
	'('            reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'!'            reduce using rule 12


State 118

	Stm -> id '(' ExpCallBlock ')' ';' .                (rule 18)

	int            reduce using rule 18
	num            reduce using rule 18
	id             reduce using rule 18
	for            reduce using rule 18
	if             reduce using rule 18
	else           reduce using rule 18
	string         reduce using rule 18
	text           reduce using rule 18
	return         reduce using rule 18
	while          reduce using rule 18
	bool           reduce using rule 18
	true           reduce using rule 18
	false          reduce using rule 18
	scan_int       reduce using rule 18
	print_int      reduce using rule 18
	print_str      reduce using rule 18
	'('            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'!'            reduce using rule 18


State 119

	ExpCallBlock -> ExpCallBlock ',' ExpCall .          (rule 52)

	','            reduce using rule 52
	')'            reduce using rule 52


State 120

	Stm -> for '(' Stm Exp ';' . Exp ')' StmBlock       (rule 16)

	num            shift, and enter state 42
	id             shift, and enter state 43
	text           shift, and enter state 44
	true           shift, and enter state 45
	false          shift, and enter state 46
	scan_int       shift, and enter state 47
	'('            shift, and enter state 48
	'!'            shift, and enter state 49

	Exp            goto state 125

State 121

	Stm -> if Exp Stm else Stm .                        (rule 14)

	int            reduce using rule 14
	num            reduce using rule 14
	id             reduce using rule 14
	for            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	string         reduce using rule 14
	text           reduce using rule 14
	return         reduce using rule 14
	while          reduce using rule 14
	bool           reduce using rule 14
	true           reduce using rule 14
	false          reduce using rule 14
	scan_int       reduce using rule 14
	print_int      reduce using rule 14
	print_str      reduce using rule 14
	'('            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'!'            reduce using rule 14


State 122

	Exp -> id '(' ExpCallBlock ')' .                    (rule 47)

	int            reduce using rule 47
	id             reduce using rule 47
	for            reduce using rule 47
	if             reduce using rule 47
	string         reduce using rule 47
	return         reduce using rule 47
	while          reduce using rule 47
	bool           reduce using rule 47
	print_int      reduce using rule 47
	print_str      reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	')'            reduce using rule 47
	'{'            reduce using rule 47
	'%'            reduce using rule 47
	'!='           reduce using rule 47
	'=='           reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'&&'           reduce using rule 47
	'||'           reduce using rule 47
	'++'           reduce using rule 47
	"--"           reduce using rule 47


State 123

	Stm -> print_int '(' Exp ')' ';' .                  (rule 19)

	int            reduce using rule 19
	num            reduce using rule 19
	id             reduce using rule 19
	for            reduce using rule 19
	if             reduce using rule 19
	else           reduce using rule 19
	string         reduce using rule 19
	text           reduce using rule 19
	return         reduce using rule 19
	while          reduce using rule 19
	bool           reduce using rule 19
	true           reduce using rule 19
	false          reduce using rule 19
	scan_int       reduce using rule 19
	print_int      reduce using rule 19
	print_str      reduce using rule 19
	'('            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'!'            reduce using rule 19


State 124

	Stm -> print_str '(' Exp ')' ';' .                  (rule 20)

	int            reduce using rule 20
	num            reduce using rule 20
	id             reduce using rule 20
	for            reduce using rule 20
	if             reduce using rule 20
	else           reduce using rule 20
	string         reduce using rule 20
	text           reduce using rule 20
	return         reduce using rule 20
	while          reduce using rule 20
	bool           reduce using rule 20
	true           reduce using rule 20
	false          reduce using rule 20
	scan_int       reduce using rule 20
	print_int      reduce using rule 20
	print_str      reduce using rule 20
	'('            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'!'            reduce using rule 20


State 125

	Stm -> for '(' Stm Exp ';' Exp . ')' StmBlock       (rule 16)
	Exp -> Exp . '+' Exp                                (rule 31)
	Exp -> Exp . '-' Exp                                (rule 32)
	Exp -> Exp . '*' Exp                                (rule 33)
	Exp -> Exp . '/' Exp                                (rule 34)
	Exp -> Exp . '%' Exp                                (rule 35)
	Exp -> Exp . '<=' Exp                               (rule 36)
	Exp -> Exp . '>=' Exp                               (rule 37)
	Exp -> Exp . '<' Exp                                (rule 38)
	Exp -> Exp . '>' Exp                                (rule 39)
	Exp -> Exp . '==' Exp                               (rule 40)
	Exp -> Exp . '!=' Exp                               (rule 41)
	Exp -> Exp . '&&' Exp                               (rule 42)
	Exp -> Exp . '||' Exp                               (rule 43)
	Exp -> Exp . '++'                                   (rule 44)
	Exp -> Exp . "--"                                   (rule 45)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 126
	'%'            shift, and enter state 70
	'!='           shift, and enter state 71
	'=='           shift, and enter state 72
	'<='           shift, and enter state 73
	'>='           shift, and enter state 74
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	'++'           shift, and enter state 79
	"--"           shift, and enter state 80


State 126

	Stm -> for '(' Stm Exp ';' Exp ')' . StmBlock       (rule 16)

	int            shift, and enter state 17
	id             shift, and enter state 26
	for            shift, and enter state 27
	if             shift, and enter state 28
	string         shift, and enter state 5
	return         shift, and enter state 29
	while          shift, and enter state 30
	bool           shift, and enter state 6
	print_int      shift, and enter state 31
	print_str      shift, and enter state 32
	'{'            shift, and enter state 33

	Stm            goto state 22
	ReturnStm      goto state 23
	StmBlock       goto state 127
	Type           goto state 25

State 127

	Stm -> for '(' Stm Exp ';' Exp ')' StmBlock .       (rule 16)
	StmBlock -> StmBlock . Stm                          (rule 24)

	int            shift, and enter state 17
			(reduce using rule 16)

	num            reduce using rule 16
	id             shift, and enter state 26
			(reduce using rule 16)

	for            shift, and enter state 27
			(reduce using rule 16)

	if             shift, and enter state 28
			(reduce using rule 16)

	else           reduce using rule 16
	string         shift, and enter state 5
			(reduce using rule 16)

	text           reduce using rule 16
	return         shift, and enter state 29
			(reduce using rule 16)

	while          shift, and enter state 30
			(reduce using rule 16)

	bool           shift, and enter state 6
			(reduce using rule 16)

	true           reduce using rule 16
	false          reduce using rule 16
	scan_int       reduce using rule 16
	print_int      shift, and enter state 31
			(reduce using rule 16)

	print_str      shift, and enter state 32
			(reduce using rule 16)

	'('            reduce using rule 16
	'{'            shift, and enter state 33
			(reduce using rule 16)

	'}'            reduce using rule 16
	'!'            reduce using rule 16

	Stm            goto state 56
	ReturnStm      goto state 23
	Type           goto state 25

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 56
Number of terminals: 40
Number of non-terminals: 12
Number of states: 128
